name: CI

on:
  pull_request:
    branches:
      - main

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: ./.github/actions/python-setup

      - name: Run flake8
        run: inv lint.flake8

      - name: Run black
        run: inv lint.black

      - name: Run isort
        run: inv lint.isort
  build:
    name: Build
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: ./.github/actions/python-setup

      - name: Start Docker Containers
        run: inv docker.build --daemon --up

      - name: List Running Containers
        run: docker ps -a

      - name: Run Migrations
        run: inv django.migrate

      - name: Create Docker Images Directory
        run: mkdir -p ./docker_images

      - name: Save Docker Image as Tarball
        run: |
          for image in $(docker images --format "{{.Repository}}:{{.Tag}}"); do
            image_filename=$(echo $image | sed 's/\//_/g').tar
            echo "Saving $image as $image_filename"
            docker save $image -o ./docker_images/$image_filename
          done

      - name: Cache Docker Images
        uses: actions/cache@v3
        with:
          path: ./docker_images/
          key: >
            ${{ runner.os }}-docker-images-
            ${{ hashFiles('requirements.txt') }}-
            ${{ hashFiles('Dockerfile') }}-
            ${{ hashFiles('docker-compose.yaml') }}
          restore-keys: |
            ${{ runner.os }}-docker-images-
  test:
    name: Tests
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: ./.github/actions/python-setup

      - name: Create Docker Images Directory
        run: mkdir -p ./docker_images

      - name: Restore Docker Images from Cache
        uses: actions/cache@v3
        with:
          path: ./docker_images/
          key: >
            ${{ runner.os }}-docker-images-
            ${{ hashFiles('requirements.txt') }}-
            ${{ hashFiles('Dockerfile') }}-
            ${{ hashFiles('docker-compose.yaml') }}
          restore-keys: |
            ${{ runner.os }}-docker-images-

      - name: Load Docker Images from Cache
        run: |
          for image_tarball in ./docker_images/*.tar; do
            if [ -f $image_tarball ]; then
              echo "Loading Docker image from $image_tarball"
              docker load -i $image_tarball
            else
              echo "No Docker image tarballs found in ./docker_images/"
            fi
          done

      - name: List Loaded Docker Images
        run: docker images

      - name: Start Containers
        run: inv docker.run --daemon

      - name: Run Migrations
        run: inv django.migrate

      - name: Run Pytest
        run: inv test.pytest

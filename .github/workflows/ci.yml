name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  lint:
    name: Lint Code
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"

      - name: Install Dependencies
        run: pip install black==25.1.0 isort==6.0.1 flake8==7.2.0

      - name: Run Black
        run: black . --check --line-length 120

      - name: Run isort
        run: isort . --check --profile=black --line-length 120

      - name: Run flake8
        run: flake8 . --count

  test:
    name: Run Tests
    runs-on: ubuntu-latest
    needs: lint
    services:
      postgres:
        image: postgres:17
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: D3vP0stgr3s!
          POSTGRES_DB: elodrinks_db
        ports:
          - 5432:5432
    env:
      DATABASE_URL: postgres://postgres:D3vP0stgr3s!@localhost:5432/elodrinks_db
      DJANGO_SETTINGS_MODULE: elo_drinks.settings
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"

      - name: Install Dependencies
        run: |
          pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run Migrations
        run: python manage.py migrate --noinput

      - name: Run Pytest
        run: pytest --maxfail=5 --disable-warnings -v

  build:
    name: Build Project
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Build Docker Image
        run: docker compose -f docker-compose.yml up --build -d django

      - name: Run Migrations
        run: docker compose exec -T django python manage.py migrate --noinput

      - name: Collect Static Files
        run: docker compose exec -T django python manage.py collectstatic --noinput
